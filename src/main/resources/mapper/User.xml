<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace：命名空间，用于隔离sql，还有一个很重要的作用，后面会讲 -->
<mapper namespace="mapper.UserMapper">

    <resultMap id="userOrderResultMap" type="poji.User">
        <id property="id" column="id"/>
        <result property="username" column="username"/>
        <result property="birthday" column="birthday"/>
        <result property="sex" column="sex"/>
        <result property="address" column="address"/>
        <collection property="orderList" javaType="list" ofType="poji.Order">
            <id property="id" column="id"/>
            <!--<result property="userId" column="user_id"/>-->
            <result property="number" column="number"/>
            <result property="createtime" column="createtime"/>
            <result property="note" column="note"/>
        </collection>
    </resultMap>

    <select id="queryUserOrder" resultMap="userOrderResultMap">
        SELECT u.id, u.username, u.birthday, u.sex, u.address,
                o.id oid, o.number, o.createtime, o.note
        FROM user u LEFT JOIN orders o ON u.id = o.user_id
    </select>



    <select id="findUserById" parameterType="Integer" resultType="poji.User">
        select * from user where id = #{v}
    </select>

    <select id="findUserByUsername" parameterType="String" resultType="poji.User">
        select * from user where username like '%${value}%'
    </select>

    <insert id="insertUser" parameterType="poji.User">
        <selectKey keyProperty="id" resultType="Integer" order="AFTER">
            select LAST_INSERT_ID()
        </selectKey>
        INSERT INTO user (username, birthday, sex, address) VALUES (#{username},#{birthday},#{sex},#{address})
    </insert>

    <update id="updateUserById" parameterType="poji.User">
        UPDATE user
        SET username = #{username}, sex = #{sex}, birthday = #{birthday}, address = #{address}
        WHERE id = #{id}
    </update>

    <delete id="deleteUserByUsername" parameterType="String">
        delete from user where username = #{vv}
    </delete>
</mapper>
